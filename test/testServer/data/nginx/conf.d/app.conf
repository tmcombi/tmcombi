map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
}

server {
    listen 80;
    listen [::]:80;
    server_name trainamon.com www.trainamon.com;
    server_tokens off;

    root /usr/share/nginx/html;
    client_max_body_size 128m;

    index index.html index.php;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }


    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location ^~/jenkins {
        return 301 https://$host$request_uri;
    }
    
    location ^~/portainer {
        return 301 https://$host$request_uri;
    }
}

server {

    listen 443 ssl;
    listen [::]:443;

    server_name trainamon.com www.trainamon.com;
    server_tokens off;

    root /usr/share/nginx/html;
    client_max_body_size 128m;

    index index.html index.php;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;

    ssl_certificate /etc/letsencrypt/live/trainamon.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/trainamon.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location ^~/jenkins/ {
        proxy_pass http://jenkins:8080;
	
	proxy_redirect http:// https://;

	sendfile off;

        proxy_set_header    Host                $host:$server_port;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_max_temp_file_size 0;

        # This is the maximum upload size
        client_max_body_size       10m;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        proxy_temp_file_write_size 64k;

        # Required for new HTTP-based CLI
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    }

    location ^~/portainer/ {
        proxy_pass http://portainer:9000/;
        proxy_set_header    Connection "";
        proxy_http_version 1.1;
    }
    
    location ^~/portainer/ws/ {
    	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	proxy_http_version 1.1;
	proxy_pass http://portainer:9000/ws/;
    }

    location /v2/ {
      # Do not allow connections from docker 1.5 and earlier
      # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      ## If $docker_distribution_api_version is empty, the header is not added.
      ## See the map directive above where this variable is defined.
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

      proxy_pass                          http://registry:5000;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }

    
}
