import argparse

feature_mask
sign_mask

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--source", action="store",
                        dest="source",
                        help="stem name")
    parser.add_argument("--target", action="store",
                        dest="target",
                        help="stem name")
    args = parser.parse_args()

    features = []
    signs = []
    for i in range(len(feature_mask)):
        if feature_mask[i] != '0':
            features.append(len(feature_mask)-i-1)
            if sign_mask[i] != '0':
                signs.append(-1)
            else:
                signs.append(1)
    features.reverse()
    signs.reverse()

    for ext in ['.data', '.test']:
        f_in = open(args.source + ext, 'r')
        f_out = open(args.target + ext, 'w')
        for line in f_in:
            line = line.strip().split(',')
            res = []
            for i in range(len(features)):
                res.append(str(signs[i]*float(line[features[i]])))
            res.append(line[-1])
            res = ','.join(res)
            f_out.write(res + '\n')
        f_in.close()
        f_out.close()

    f = open(args.target + '.names', 'w')
    f.write("| names file\n\n")
    f.write("target.\n\n")
    for i in range(len(features)):
        f.write("feature" + str(i) + ": continuous.\n")
    f.write("target: 0,1.\n")
    f.close()
